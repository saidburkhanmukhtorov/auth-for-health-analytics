definitions:
  handlers.ForgotPasswordInput:
    properties:
      email:
        type: string
    type: object
  handlers.LoginInput:
    properties:
      email:
        type: string
      password:
        type: string
    required:
    - email
    - password
    type: object
  handlers.ResetPasswordInput:
    properties:
      confirm_new_password:
        type: string
      email:
        type: string
      new_password:
        type: string
      otp:
        type: string
    required:
    - confirm_new_password
    - email
    - new_password
    - otp
    type: object
  handlers.VerifyOTPInput:
    properties:
      email:
        type: string
      otp:
        type: string
      password:
        type: string
    required:
    - email
    - otp
    - password
    type: object
  models.User:
    properties:
      created_at:
        type: string
      date_of_birth:
        type: string
      email:
        type: string
      full_name:
        type: string
      id:
        type: string
      role:
        type: string
      updated_at:
        type: string
      username:
        type: string
    type: object
  models.UserCreate:
    properties:
      date_of_birth:
        type: string
      email:
        type: string
      full_name:
        type: string
      role:
        type: string
      username:
        type: string
    type: object
info:
  contact:
    email: support@swagger.io
    name: API Support
    url: http://www.swagger.io/support
  description: This is a sample server celler server.
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  termsOfService: http://swagger.io/terms/
  title: Swagger Example API
paths:
  /auth/forgot-password:
    post:
      consumes:
      - application/json
      description: Initiates the password reset process by sending an OTP to the user's
        email.
      parameters:
      - description: User's email address
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.ForgotPasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Forgot Password
      tags:
      - auth
  /auth/login:
    post:
      consumes:
      - application/json
      description: Authenticates a user and issues a JWT token.
      parameters:
      - description: User login credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.LoginInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      summary: Login
      tags:
      - auth
  /auth/register:
    post:
      consumes:
      - application/json
      description: Registers a new user and sends an OTP to their email for verification.
      parameters:
      - description: User registration data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UserCreate'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Conflict
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Register a new user
      tags:
      - auth
  /auth/reset-password:
    post:
      consumes:
      - application/json
      description: Resets the user's password using the provided OTP and new password.
      parameters:
      - description: Email, OTP, and new password
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.ResetPasswordInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Reset Password
      tags:
      - auth
  /auth/validate:
    get:
      consumes:
      - application/json
      description: Validates a JWT token and returns the user ID and role.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Validate Token
      tags:
      - auth
  /auth/verify-otp:
    post:
      consumes:
      - application/json
      description: Verifies the OTP sent to the user's email during registration.
      parameters:
      - description: Email and OTP
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handlers.VerifyOTPInput'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "401":
          description: Unauthorized
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      summary: Verify OTP
      tags:
      - auth
  /users:
    get:
      consumes:
      - application/json
      description: Retrieves a list of all users.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/models.User'
            type: array
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get All Users
      tags:
      - users
  /users/{userId}:
    delete:
      consumes:
      - application/json
      description: Deletes a user by their ID.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Delete User
      tags:
      - users
    get:
      consumes:
      - application/json
      description: Retrieves a user by their ID.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.User'
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "404":
          description: Not Found
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Get User by ID
      tags:
      - users
    put:
      consumes:
      - application/json
      description: Updates a user's information.
      parameters:
      - description: User ID
        in: path
        name: userId
        required: true
        type: string
      - description: Updated user data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Bad Request
          schema:
            additionalProperties: true
            type: object
        "500":
          description: Internal Server Error
          schema:
            additionalProperties: true
            type: object
      security:
      - ApiKeyAuth: []
      summary: Update User
      tags:
      - users
securityDefinitions:
  ApiKeyAuth:
    description: Description for what is this security definition being used
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
